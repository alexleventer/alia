(require '[qbits.alia.embedded :as e])
(e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}})
(require '[qbits.alia.embedded :as e])
(e/start-embedded-cassandra {:rpc-port 6789 :storage-port 6790 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}})
(require '[qbits.alia.embedded :as e])
(e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}})
(def x *1)
x
((:cleanup! x))
(e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}})
(require '[qbits.alia.embedded :as e])
(e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}})
((:cleanup! x))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
x
((:cleanup! x))
x
((:cleanup! x))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
((:cleanup! x))
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore []}}))
x
(require '[qbits.alia.embedded :as e])
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
x
((:cleanup! x))
(def x (e/start-embedded-cassandra {:port 6789 :schema {:idstore ["CREATE TABLE user(id bigint, name text, PRIMARY KEY (id))"]}}))
